//Kavya
#include <iostream> 
using namespace std; 
class Time
{
        int seconds;
        int hh,mm,ss;
    public:
        void getTime();
        void convertIntoSeconds();
        void displayTime();
};

void Time::getTime()
{
cout << "Enter time:" << endl;
cout << "Hours? "; 
cin >> hh;
cout << "Minutes? ";
cin >> mm;
cout << "Seconds? "; 
cin >> ss;
}
void Time::convertIntoSeconds()
{
seconds = hh*3600 + mm*60 + ss;
}
void Time::displayTime()
{
cout << "The time is: = "<< hh <<"hr:" << mm << "m:" << ss <<"s" << endl;
cout << "Time in total seconds: " << seconds<<"s"<<endl;
}      
int main()
{
    Time T;
    T.getTime();
    T.convertIntoSeconds();
    T.displayTime();
    return 0;
}
------------------------------------------------------------------------------------------------------------------------------
//Shriya

#include <iostream>
using namespace std;
int isNumericString(unsigned char *num)
{
int i=0;
while (*(num+i)) {
if (*(num+i) >= '0' && *(num+i) <= '9')
i++;
else
return 0;
}
return 1;
}

int main()
{
int ret = 0;
unsigned char str1[] = {};
unsigned char str2[] = {};
cout<<"Enter the string 1 = "<<endl;
cin>>str1;
cout<<"Enter the string 2 = "<<endl;
cin>>str2;

ret = isNumericString(str1);
if(ret)
cout<<"It is numeric string"<<endl;
else
cout<<"It is not numeric string"<<endl;

ret = isNumericString(str2);
if(ret)
cout<<"It is numeric string"<<endl;
else
cout<<"It is not numeric string"<<endl;

return 0;
}

----------------------------------------------------------------------------------------------------------------------------------------------------------
//Naveen

#include<iostream>
using namespace std;

class Employee
{
        int eid;
        char emp_name[100];
        float basic_salary, hra,da, i_tax,net_salary;
        public:
        void accept_details()
        {
                cout<<"\n Enter Employee Id : ";
                cin>>eid;
                cout<<"\n Enter Employee Name : ";
                cin>>emp_name;
                cout<<"\n Enter Basic Salary : ";
                cin>>basic_salary;
                hra = 800;
                da = 0.25 * basic_salary;
                i_tax = 0.15 * basic_salary;
                net_salary = basic_salary + da + hra - i_tax;
        }
        void display_details()
    {
        cout<<"\n-------------------------------";
        cout<<"\nEmployee id : "<<eid;
        cout<<"\nEmployee name : "<<emp_name;
        cout<<"\nBasic salary : "<<basic_salary;
        cout<<"\nHRA : "<<hra;
        cout<<"\nDA : "<<da;
        cout<<"\nTax : "<<i_tax;
        cout<<"\nNet Salary : "<<net_salary;
    }
};
int main()
{
        Employee e;
        e.accept_details();
        e.display_details();
        return 0;
}
------------------------------------------------------------------------------------------------------------------------------------------------------------
//Nishanth

#include <iostream>

 using namespace std;

class Rectangle
{
    int len, bre, area;

    public:
    void setlen(int l = 0)
    {
        len = l;
    }
    void setbre(int b = 0)
    {
        bre = b;
    }
    Rectangle operator*(Rectangle obj)
    {
        Rectangle obj1;
        obj1.area = len * obj.bre;
        return obj1;
    }
    void print()
    {
        cout << "Area of rectangle: " << area << " unit sq.";
    }
};

int main()
{

    int len, bdth;
    cout << "Enter the Length and Breadth: ";
    cin >> len >> bdth;
    Rectangle Len;
    Len.setlen(len);
    Rectangle Bred;
    Bred.setbre(bdth);
    Rectangle Area;
    Area = Len * Bred;
    Area.print();
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Sonal

#include<iostream>
using namespace std;

class Electric
{
        float unit;
        char name[20];
    public:
        void accept()
        {
                cout<<"\n Enter Name   : ";
                cin>>name;
                cout<<"\n No. Of Units : ";
                cin>>unit;
        }
        void print_bill();
};
void Electric::print_bill()
{
        int bill=0;
        if(unit>=100 && unit<=300)
                bill=(500+(unit*0.40));
        else if(unit>100 && unit<=300)
                bill=(500+(unit*0.40)+(unit*0.50));
        else if(unit>300)
                bill=(500+(unit*0.60));
        if(bill>250)
                bill=(bill+(bill*(15/100)));
        cout<<"\n Bill = "<<bill<<"\t"<<name;
}
int main()
{
        Electric e[10];
        int i,cnt;
        cout<<"\n Enter How Many Customers You Want? : ";
        cin>>cnt;
        for(i=0; i<cnt; i++)
                e[i].accept();
        for(i=0; i<cnt; i++)
                e[i].print_bill();
        return 0;
}
--------------------------------------------------------------------------------------------------------------------------------------------------------
//Ipsita

#include<iostream>
using namespace std;

class Patient    
{
        char patient_name[100];
        int age;
        char sex[50];

        public:
                void accept_patient_details()
                {
                        cout<<"\n -------------------------------";
                        cout<<"\n Enter Patient Details";
                        cout<<"\n -------------------------------";
                        cout<<"\n Patient Name : ";
                        cin>>patient_name;
                        cout<<"\n Patient Age  :  ";
                        cin>>age;
                        cout<<"\n Sex          :  ";
                        cin>>sex;
                }
                void display_patient_details()
                {
                        cout<<"\n -------------------------------";
                        cout<<"\n Displaying Patient Details";
                        cout<<"\n -------------------------------";
                        cout<<"\n Patient Name  :  "<<patient_name;
                        cout<<"\n Patient Age   :  "<<age;
                        cout<<"\n Sex           :  "<<sex;
                }
};
class IPD    
{
        int ward_no;
        int bed_no;
        int charge_per_day;
    public:
        void accept_ipd_details()
        {
                cout<<"\n -------------------------------";
                cout<<"\n Enter IPD Details ";
                cout<<"\n -------------------------------";
                cout<<"\n Ward No.        :  ";
                cin>>ward_no;
                cout<<"\n Bed No.         :  ";
                cin>>bed_no;
                cout<<"\n Charge Per Day  :  ";
                cin>>charge_per_day;
        }
        void display_ipd_details()
        {
                cout<<"\n -------------------------------";
                cout<<"\n Displaying IPD Details";
                cout<<"\n -------------------------------";
                cout<<"\n Ward No.         :  "<<ward_no;
                cout<<"\n Bed No.          :  "<<bed_no;
                cout<<"\n Charge Per Day   :  "<<charge_per_day;
        }
};

class IPDPatient : public IPD, public Patient  
{
        int no_of_days_admitted;

    public:
        void accept_ipd_patient_details()
        {
                accept_patient_details();
                accept_ipd_details();
                cout<<"\n\n Enter No. of Days Admitted   :  ";
                cin>>no_of_days_admitted;
        }
        void display_ipd_patient_details()
        {
                display_patient_details();
                display_ipd_details();
                cout<<"\n -------------------------------";
                cout<<"\n\n No. of Days Admitted  :  "<<no_of_days_admitted;
        }
};
int main()
{
        IPDPatient *ipdt;   
        int i,cnt;
        cout<<"\n Enter No. of Patient Details You Want  :  ";
        cin>>cnt;
        ipdt=new IPDPatient[cnt];
        for(i=0;i<cnt;i++)
        {
                ipdt[i].accept_ipd_patient_details();
                ipdt[i].display_ipd_patient_details();
        }
        return 0;
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Kedara

#include<iostream>
using namespace std;
 
class a;
 
class b
{
    int number;
    public:
    b(int x)
    {
        number=x;
    }
    void friend greatest(a a1,b b1);
};
 
class a
{
    int number;
    public:
    a(int x)
    {
        number=x;
    }
    void friend greatest(a a1,b b1);
};
 
void greatest(a a1,b b1)
{
    if(a1.number>b1.number)
    {
        cout<<"\n Number in class A is greatest i.e. "<<a1.number;
    }
    else if(a1.number<b1.number)
    {
        cout<<"\n Number in class B is greatest i.e. "<<b1.number;
    }
    else
    {
        cout<<"\n Number in both classes are equal";
    }
}
 
int main()
{
    cout<<"\n\n Program to find greatest of two numbers in two different classes using friend function";
    int num;
 
    cout<<"\n\n Enter number for class A - ";
    cin>>num;
    a a1(num);
 
    cout<<"\n Enter number for class B - ";
    cin>>num;
    b b1(num);
 
    greatest(a1,b1);
    cout<<"\n";
 
    return 0;
}



